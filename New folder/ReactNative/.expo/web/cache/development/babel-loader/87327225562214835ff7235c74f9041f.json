{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\ReactNative\\\\Todo\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport DatePicker from 'react-native-datepicker';\nimport { Table, Row } from 'react-native-table-component';\nimport { CheckBox } from 'react-native-elements';\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      taskName: \"\",\n      userTask: \"\",\n      date: \"\",\n      tableHead: ['S No.', 'Task', 'Due Date', 'IsDone', 'Actions'],\n      tasks: [],\n      widthArr: [40, 120, 70, 70, 70]\n    };\n\n    _this.userNameListChange = function (inputText) {\n      _this.setState({\n        taskName: inputText\n      });\n    };\n\n    _this.userdateTextChange = function (inputText) {\n      _this.setState({\n        userTask: inputText\n      });\n    };\n\n    _this.onChangetime = function (time) {\n      return _this.setState({\n        time: time\n      });\n    };\n\n    _this.addTask = function () {\n      var tasks = _this.state.tasks;\n      tasks.push([_this.state.taskName, _this.state.date, false]);\n\n      _this.setState({\n        tasks: tasks\n      });\n\n      console.log(_this.state.tasks);\n\n      _this.setState({\n        taskName: \"\",\n        date: \"\"\n      });\n    };\n\n    _this.delTask = _this.delTask.bind(_assertThisInitialized(_this));\n    _this.isDone = _this.isDone.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"delTask\",\n    value: function delTask(index) {\n      console.log(index);\n      var task_list = this.state.tasks;\n      task_list.splice(index, 1);\n      this.setState({\n        tasks: task_list\n      });\n    }\n  }, {\n    key: \"isDone\",\n    value: function isDone(index) {\n      console.log(index);\n      var task_list = this.state.tasks;\n      task_list[index][2] = true;\n      this.setState({\n        tasks: task_list\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var data = [];\n\n      var _loop = function _loop(i) {\n        var dataRow = [];\n        dataRow.push(i + 1);\n        dataRow.push(_this2.state.tasks[i][0]);\n        dataRow.push(_this2.state.tasks[i][1]);\n\n        if (!_this2.state.tasks[i][2]) {\n          dataRow.push(React.createElement(CheckBox, {\n            center: true,\n            checkedIcon: \"dot-circle-o\",\n            uncheckedIcon: \"circle-o\",\n            checked: _this2.state.tasks[i][2],\n            onPress: function onPress() {\n              return _this2.isDone(i);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 20\n            }\n          }));\n        } else {\n          dataRow.push(\"DONE\");\n        }\n\n        if (true) {\n          dataRow.push(React.createElement(Button, {\n            title: \"DEL\",\n            color: \"green\",\n            onPress: function onPress() {\n              return _this2.delTask(i);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 18\n            }\n          }));\n        }\n\n        data.push(dataRow);\n      };\n\n      for (var i = 0; i < this.state.tasks.length; i += 1) {\n        _loop(i);\n      }\n\n      return React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.txtLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }\n      }, \"TO DO List\"), React.createElement(TextInput, {\n        style: styles.textInputStyle,\n        onChangeText: this.userNameListChange,\n        value: this.state.taskName,\n        placeholder: \"Add Task Name\",\n        placeholderTextColor: \"black\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }\n      }), React.createElement(DatePicker, {\n        style: styles.textInputStyle,\n        date: this.state.date,\n        mode: \"date\",\n        placeholder: \"select date\",\n        format: \"DD-MM-YYYY\",\n        confirmBtnText: \"Confirm\",\n        cancelBtnText: \"Cancel\",\n        onDateChange: function onDateChange(date) {\n          _this2.setState({\n            date: date\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: {\n          margin: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 7\n        }\n      }, React.createElement(Button, {\n        title: \"ADD\",\n        color: \"#3642ba\",\n        onPress: this.addTask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }\n      }))), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 7\n        }\n      }, React.createElement(Table, {\n        borderStyle: {\n          borderColor: '#C1C0B9'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }\n      }, React.createElement(Row, {\n        data: this.state.tableHead,\n        widthArr: this.state.widthArr,\n        style: styles.head,\n        textStyle: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 5\n        }\n      }), data.map(function (dataRow, index) {\n        return React.createElement(Row, {\n          key: index,\n          data: dataRow,\n          widthArr: _this2.state.widthArr,\n          style: [styles.row, index % 2 && {\n            backgroundColor: '#ffffff'\n          }],\n          textStyle: styles.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 21\n          }\n        });\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"flex-start\",\n    alignContent: \"center\",\n    margin: 10,\n    backgroundColor: \"white\"\n  },\n  textInputStyle: {\n    borderColor: \"black\",\n    borderWidth: 1,\n    height: 50,\n    marginLeft: 20,\n    marginRight: 20,\n    padding: 5,\n    marginTop: 8,\n    backgroundColor: \"white\"\n  },\n  txtLogin: {\n    fontWeight: \"bold\",\n    fontSize: 25,\n    height: 50,\n    marginLeft: 20,\n    marginRight: 20,\n    padding: 5,\n    marginTop: 8,\n    backgroundColor: \"#8c8887\",\n    textAlign: \"center\",\n    margin: 5\n  },\n  txtLogin1: {\n    padding: 15,\n    fontWeight: \"bold\",\n    fontSize: 20,\n    textAlign: \"center\",\n    margin: 5\n  },\n  head: {\n    height: 50,\n    backgroundColor: 'yellow'\n  },\n  text: {\n    color: 'blue',\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  dataWrapper: {\n    marginTop: -1\n  },\n  row: {\n    height: 40\n  }\n});\nexport default App;","map":{"version":3,"sources":["D:/ReactNative/Todo/App.js"],"names":["React","Component","DatePicker","Table","Row","CheckBox","App","props","state","taskName","userTask","date","tableHead","tasks","widthArr","userNameListChange","inputText","setState","userdateTextChange","onChangetime","time","addTask","push","console","log","delTask","bind","isDone","index","task_list","splice","data","i","dataRow","length","styles","container","txtLogin","textInputStyle","margin","borderColor","head","text","map","row","backgroundColor","StyleSheet","create","flex","justifyContent","alignContent","borderWidth","height","marginLeft","marginRight","padding","marginTop","fontWeight","fontSize","textAlign","txtLogin1","color","dataWrapper"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,KAAT,EAAgBC,GAAhB,QAA2B,8BAA3B;AACA,SAASC,QAAT,QAAyB,uBAAzB;;IAEMC,G;;;;;AAEJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AADiB,UAMnBC,KANmB,GAMX;AAENC,MAAAA,QAAQ,EAAG,EAFL;AAGNC,MAAAA,QAAQ,EAAG,EAHL;AAKNC,MAAAA,IAAI,EAAG,EALD;AAMTC,MAAAA,SAAS,EAAE,CAAC,OAAD,EAAU,MAAV,EAAkB,UAAlB,EAA6B,QAA7B,EAAsC,SAAtC,CANF;AAQNC,MAAAA,KAAK,EAAG,EARF;AASTC,MAAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,EAAd,EAAkB,EAAlB;AATD,KANW;;AAAA,UAkBnBC,kBAlBmB,GAkBE,UAACC,SAAD,EAAe;AAClC,YAAKC,QAAL,CAAc;AAAER,QAAAA,QAAQ,EAAEO;AAAZ,OAAd;AACD,KApBkB;;AAAA,UAsBnBE,kBAtBmB,GAsBE,UAACF,SAAD,EAAe;AAClC,YAAKC,QAAL,CAAc;AAAEP,QAAAA,QAAQ,EAAEM;AAAZ,OAAd;AACD,KAxBkB;;AAAA,UAyBnBG,YAzBmB,GAyBJ,UAAAC,IAAI;AAAA,aAAI,MAAKH,QAAL,CAAc;AAAEG,QAAAA,IAAI,EAAJA;AAAF,OAAd,CAAJ;AAAA,KAzBA;;AAAA,UA2BnBC,OA3BmB,GA2BT,YAAM;AACd,UAAIR,KAAK,GAAG,MAAKL,KAAL,CAAWK,KAAvB;AACAA,MAAAA,KAAK,CAACS,IAAN,CAAW,CAAC,MAAKd,KAAL,CAAWC,QAAZ,EAAqB,MAAKD,KAAL,CAAWG,IAAhC,EAAsC,KAAtC,CAAX;;AACA,YAAKM,QAAL,CAAc;AAAEJ,QAAAA,KAAK,EAAEA;AAAT,OAAd;;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKhB,KAAL,CAAWK,KAAvB;;AACA,YAAKI,QAAL,CAAc;AAACR,QAAAA,QAAQ,EAAG,EAAZ;AAAeE,QAAAA,IAAI,EAAG;AAAtB,OAAd;AACD,KAjCkB;;AAEjB,UAAKc,OAAL,GAAe,MAAKA,OAAL,CAAaC,IAAb,+BAAf;AACA,UAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYD,IAAZ,+BAAd;AAHiB;AAIlB;;;;4BA+BOE,K,EAAM;AACbL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACA,UAAIC,SAAS,GAAG,KAAKrB,KAAL,CAAWK,KAA3B;AACAgB,MAAAA,SAAS,CAACC,MAAV,CAAiBF,KAAjB,EAAwB,CAAxB;AACG,WAAKX,QAAL,CAAc;AAACJ,QAAAA,KAAK,EAAEgB;AAAR,OAAd;AACH;;;2BAEMD,K,EAAM;AACXL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACA,UAAIC,SAAS,GAAG,KAAKrB,KAAL,CAAWK,KAA3B;AACAgB,MAAAA,SAAS,CAACD,KAAD,CAAT,CAAiB,CAAjB,IAAoB,IAApB;AACA,WAAKX,QAAL,CAAc;AAACJ,QAAAA,KAAK,EAAEgB;AAAR,OAAd;AACD;;;6BAEQ;AAAA;;AACV,UAAME,IAAI,GAAG,EAAb;;AADU,iCAEEC,CAFF;AAGL,YAAMC,OAAO,GAAG,EAAhB;AACHA,QAAAA,OAAO,CAACX,IAAR,CAAaU,CAAC,GAAC,CAAf;AACGC,QAAAA,OAAO,CAACX,IAAR,CAAa,MAAI,CAACd,KAAL,CAAWK,KAAX,CAAiBmB,CAAjB,EAAoB,CAApB,CAAb;AACHC,QAAAA,OAAO,CAACX,IAAR,CAAa,MAAI,CAACd,KAAL,CAAWK,KAAX,CAAiBmB,CAAjB,EAAoB,CAApB,CAAb;;AACC,YAAG,CAAC,MAAI,CAACxB,KAAL,CAAWK,KAAX,CAAiBmB,CAAjB,EAAoB,CAApB,CAAJ,EAA2B;AACzBC,UAAAA,OAAO,CAACX,IAAR,CAAa,oBAAC,QAAD;AACb,YAAA,MAAM,MADO;AAEb,YAAA,WAAW,EAAC,cAFC;AAGb,YAAA,aAAa,EAAC,UAHD;AAIb,YAAA,OAAO,EAAE,MAAI,CAACd,KAAL,CAAWK,KAAX,CAAiBmB,CAAjB,EAAoB,CAApB,CAJI;AAKb,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACL,MAAL,CAAYK,CAAZ,CAAN;AAAA,aALI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAb;AAOD,SARD,MASI;AACFC,UAAAA,OAAO,CAACX,IAAR,CAAa,MAAb;AACD;;AAEF,YAAG,IAAH,EAAQ;AACPW,UAAAA,OAAO,CAACX,IAAR,CAAa,oBAAC,MAAD;AACb,YAAA,KAAK,EAAC,KADO;AAEb,YAAA,KAAK,EAAC,OAFO;AAGb,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACG,OAAL,CAAaO,CAAb,CAAN;AAAA,aAHI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAb;AAKE;;AAEAD,QAAAA,IAAI,CAACT,IAAL,CAAUW,OAAV;AA5BK;;AAEP,WAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKxB,KAAL,CAAWK,KAAX,CAAiBqB,MAArC,EAA6CF,CAAC,IAAI,CAAlD,EAAqD;AAAA,cAA5CA,CAA4C;AA2BpD;;AACD,aACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEG,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAGE,oBAAC,SAAD;AACE,QAAA,KAAK,EAAEF,MAAM,CAACG,cADhB;AAEE,QAAA,YAAY,EAAE,KAAKvB,kBAFrB;AAGE,QAAA,KAAK,EAAI,KAAKP,KAAL,CAAWC,QAHtB;AAIE,QAAA,WAAW,EAAC,eAJd;AAKE,QAAA,oBAAoB,EAAC,OALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAWE,oBAAC,UAAD;AACA,QAAA,KAAK,EAAI0B,MAAM,CAACG,cADhB;AAEA,QAAA,IAAI,EAAE,KAAK9B,KAAL,CAAWG,IAFjB;AAGA,QAAA,IAAI,EAAC,MAHL;AAIA,QAAA,WAAW,EAAC,aAJZ;AAKA,QAAA,MAAM,EAAC,YALP;AAOA,QAAA,cAAc,EAAC,SAPf;AAQA,QAAA,aAAa,EAAC,QARd;AASA,QAAA,YAAY,EAAE,sBAACA,IAAD,EAAU;AAAC,UAAA,MAAI,CAACM,QAAL,CAAc;AAACN,YAAAA,IAAI,EAAEA;AAAP,WAAd;AAA4B,SATrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,EAuBA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAE4B,UAAAA,MAAM,EAAE;AAAV,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AACE,QAAA,KAAK,EAAC,KADR;AAEE,QAAA,KAAK,EAAC,SAFR;AAGE,QAAA,OAAO,EAAE,KAAKlB,OAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAvBA,CADA,EAgCA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM,oBAAC,KAAD;AAAO,QAAA,WAAW,EAAE;AAACmB,UAAAA,WAAW,EAAE;AAAd,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACR,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAE,KAAKhC,KAAL,CAAWI,SAAtB;AAAiC,QAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWM,QAAtD;AAAgE,QAAA,KAAK,EAAEqB,MAAM,CAACM,IAA9E;AAAoF,QAAA,SAAS,EAAEN,MAAM,CAACO,IAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADQ,EAGMX,IAAI,CAACY,GAAL,CAAS,UAACV,OAAD,EAAUL,KAAV;AAAA,eACP,oBAAC,GAAD;AACE,UAAA,GAAG,EAAEA,KADP;AAEE,UAAA,IAAI,EAAEK,OAFR;AAGE,UAAA,QAAQ,EAAE,MAAI,CAACzB,KAAL,CAAWM,QAHvB;AAIE,UAAA,KAAK,EAAE,CAACqB,MAAM,CAACS,GAAR,EAAahB,KAAK,GAAC,CAAN,IAAW;AAACiB,YAAAA,eAAe,EAAE;AAAlB,WAAxB,CAJT;AAKE,UAAA,SAAS,EAAEV,MAAM,CAACO,IALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADO;AAAA,OAAT,CAHN,CADN,CAhCA,CADF;AAmDC;;;;EApIazC,S;;AAuIlB,IAAMkC,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAC/BX,EAAAA,SAAS,EAAE;AACTY,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,cAAc,EAAE,YAFP;AAGTC,IAAAA,YAAY,EAAE,QAHL;AAITX,IAAAA,MAAM,EAAE,EAJC;AAKTM,IAAAA,eAAe,EAAE;AALR,GADoB;AAS/BP,EAAAA,cAAc,EAAE;AACdE,IAAAA,WAAW,EAAE,OADC;AAEdW,IAAAA,WAAW,EAAE,CAFC;AAGdC,IAAAA,MAAM,EAAE,EAHM;AAIdC,IAAAA,UAAU,EAAE,EAJE;AAKdC,IAAAA,WAAW,EAAE,EALC;AAMdC,IAAAA,OAAO,EAAE,CANK;AAOdC,IAAAA,SAAS,EAAE,CAPG;AASdX,IAAAA,eAAe,EAAE;AATH,GATe;AAqB/BR,EAAAA,QAAQ,EAAE;AAERoB,IAAAA,UAAU,EAAE,MAFJ;AAGRC,IAAAA,QAAQ,EAAE,EAHF;AAKRN,IAAAA,MAAM,EAAE,EALA;AAMRC,IAAAA,UAAU,EAAE,EANJ;AAORC,IAAAA,WAAW,EAAE,EAPL;AAQRC,IAAAA,OAAO,EAAE,CARD;AASRC,IAAAA,SAAS,EAAE,CATH;AAWRX,IAAAA,eAAe,EAAE,SAXT;AAYRc,IAAAA,SAAS,EAAC,QAZF;AAaRpB,IAAAA,MAAM,EAAG;AAbD,GArBqB;AAqC/BqB,EAAAA,SAAS,EAAE;AACTL,IAAAA,OAAO,EAAE,EADA;AAETE,IAAAA,UAAU,EAAE,MAFH;AAGTC,IAAAA,QAAQ,EAAE,EAHD;AAITC,IAAAA,SAAS,EAAC,QAJD;AAKTpB,IAAAA,MAAM,EAAE;AALC,GArCoB;AA6C/BE,EAAAA,IAAI,EAAE;AACJW,IAAAA,MAAM,EAAE,EADJ;AAEJP,IAAAA,eAAe,EAAE;AAFb,GA7CyB;AAkD/BH,EAAAA,IAAI,EAAE;AACJmB,IAAAA,KAAK,EAAC,MADF;AAEJF,IAAAA,SAAS,EAAE,QAFP;AAGJF,IAAAA,UAAU,EAAE;AAHR,GAlDyB;AAuD/BK,EAAAA,WAAW,EAAE;AACXN,IAAAA,SAAS,EAAE,CAAC;AADD,GAvDkB;AA0D/BZ,EAAAA,GAAG,EAAE;AACHQ,IAAAA,MAAM,EAAE;AADL;AA1D0B,CAAlB,CAAf;AA+DA,eAAe9C,GAAf","sourcesContent":["import React, { Component } from \"react\";  \nimport { StyleSheet, View, TextInput, Text, Button, Picker,ScrollView }  from \"react-native\";\nimport DatePicker from 'react-native-datepicker';\nimport { Table, Row } from 'react-native-table-component';\nimport { CheckBox } from 'react-native-elements';\n\nclass App extends Component { \n\n  constructor(props) {\n    super(props);\n    this.delTask = this.delTask.bind(this);\n    this.isDone = this.isDone.bind(this);  \n  }\n\n  state = {  \n\n    taskName : \"\",\n    userTask : \"\",\n    \n    date : \"\",\n\ttableHead: ['S No.', 'Task', 'Due Date','IsDone','Actions'],\n    \n    tasks : [],\n\twidthArr: [40, 120, 70, 70, 70]\n  }\n  \n  userNameListChange = (inputText) => {  \n    this.setState({ taskName: inputText })  \n  } \n  \n  userdateTextChange = (inputText) => {  \n    this.setState({ userTask: inputText })  \n  } \n  onChangetime = time => this.setState({ time })\n  \n  addTask = () => {  \n    let tasks = this.state.tasks;\n    tasks.push([this.state.taskName,this.state.date, false]);\n    this.setState({ tasks: tasks });\n    console.log(this.state.tasks);\n    this.setState({taskName : \"\",date : \"\"});    \n  } \n\n  delTask(index){\n\t  console.log(index);\n\t  let task_list = this.state.tasks;\n\t  task_list.splice(index, 1);\n      this.setState({tasks: task_list});   \n  }\n\n  isDone(index){\n    console.log(index);\n    let task_list = this.state.tasks;\n    task_list[index][2]=true;\n    this.setState({tasks: task_list});\n  }\n\n  render() {   \n\tconst data = [];\n    for (let i = 0; i < this.state.tasks.length; i += 1) {\n      const dataRow = [];\n\t  dataRow.push(i+1);\n      dataRow.push(this.state.tasks[i][0]);\n\t  dataRow.push(this.state.tasks[i][1]);\n    if(!this.state.tasks[i][2]){\n      dataRow.push(<CheckBox\n      center\n      checkedIcon='dot-circle-o'\n      uncheckedIcon='circle-o'\n      checked={this.state.tasks[i][2]}\n      onPress={() => this.isDone(i)} \n      />)\n    }\n    else{\n      dataRow.push(\"DONE\")\n    }\n    \n\t  if(true){\n\t\t  dataRow.push(<Button  \n\t\t\t\ttitle=\"DEL\"  \n\t\t\t\tcolor=\"green\"  \n\t\t\t\tonPress={() => this.delTask(i)} \n\t\t  /> );\n     }\n      \n      data.push(dataRow);\n    }\n    return (  \n      <ScrollView >\n      <View style={styles.container}>  \n        <Text style={styles.txtLogin}>TO DO List</Text>\n        \n        <TextInput\n          style={styles.textInputStyle}  \n          onChangeText={this.userNameListChange}\n          value = {this.state.taskName}\n          placeholder=\"Add Task Name\"  \n          placeholderTextColor=\"black\"  \n        /> \n         \n        <DatePicker\n        style = {styles.textInputStyle}\n        date={this.state.date}\n        mode=\"date\"\n        placeholder=\"select date\"\n        format=\"DD-MM-YYYY\"\n        \n        confirmBtnText=\"Confirm\"\n        cancelBtnText=\"Cancel\"\n        onDateChange={(date) => {this.setState({date: date})}}\n      />\n         \n      <View style={{ margin: 25 }}>  \n          <Button  \n            title=\"ADD\"  \n            color=\"#3642ba\"  \n            onPress={this.addTask}\n      /> \n      </View>\n      </View>\n      <View >\n            <Table borderStyle={{borderColor: '#C1C0B9'}}>\n\t\t\t\t<Row data={this.state.tableHead} widthArr={this.state.widthArr} style={styles.head} textStyle={styles.text}/>\n                {\n                  data.map((dataRow, index) => (\n                    <Row\n                      key={index}\n                      data={dataRow}\n                      widthArr={this.state.widthArr}\n                      style={[styles.row, index%2 && {backgroundColor: '#ffffff'}]}\n                      textStyle={styles.text}\n                    />\n                  ))\n                }\n              </Table>\n      </View> \n      </ScrollView>\n    ); \n    }\n}  \n  \nconst styles = StyleSheet.create({  \n  container: {  \n    flex: 1,  \n    justifyContent: \"flex-start\",  \n    alignContent: \"center\",  \n    margin: 10, \n    backgroundColor: \"white\", \n       \n  },  \n  textInputStyle: {  \n    borderColor: \"black\",  \n    borderWidth: 1,  \n    height: 50,  \n    marginLeft: 20,  \n    marginRight: 20,  \n    padding: 5,  \n    marginTop: 8,\n    \n    backgroundColor: \"white\",   \n    \n  },  \n  txtLogin: {  \n    \n    fontWeight: \"bold\",  \n    fontSize: 25,\n    \n    height: 50,  \n    marginLeft: 20,  \n    marginRight: 20,  \n    padding: 5,  \n    marginTop: 8,\n    \n    backgroundColor: \"#8c8887\", \n    textAlign:\"center\",\n    margin : 5,\n    \n  },\n  txtLogin1: {  \n    padding: 15,\n    fontWeight: \"bold\",  \n    fontSize: 20,\n    textAlign:\"center\",\n    margin: 5,\n  },\n\n  head: { \n    height: 50, \n    backgroundColor: 'yellow'\n    \n  },\n  text: { \n    color:'blue',\n    textAlign: 'center', \n    fontWeight: 'bold' \n  },\n  dataWrapper: { \n    marginTop: -1 \n  },\n  row: { \n    height: 40 \n  }  \n}); \n  \nexport default App;  "]},"metadata":{},"sourceType":"module"}